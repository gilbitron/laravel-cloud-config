#cloud-config
hostname: laravel
locale: en_US.UTF-8
packages:
  - software-properties-common
  - fail2ban
  - git
  - redis-server
runcmd:
  - add-apt-repository --no-update -y ppa:ondrej/php
  - add-apt-repository --no-update -y ppa:ondrej/nginx
  - apt-get update -y

  # Firewall
  - ufw default deny incoming
  - ufw default allow outgoing
  - ufw allow 22
  - ufw allow 80
  - ufw allow 443
  - ufw allow 3306
  - ufw enable

  # Database
  - apt-get install -y mysql-server
  - perl -p -i -e 's/^bind-address.*/#bind-address = 127.0.0.1/g' /etc/mysql/mysql.conf.d/mysqld.cnf
  - service mysql restart
  - mysql -e "UPDATE mysql.global_priv SET priv=json_set(priv, '$.password_last_changed', UNIX_TIMESTAMP(), '$.plugin', 'mysql_native_password', '$.authentication_string', 'invalid', '$.auth_or', json_array(json_object(), json_object('plugin', 'unix_socket'))) WHERE User='root';"
  - mysql -e "UPDATE mysql.global_priv SET priv=json_set(priv, '$.plugin', 'mysql_native_password', '$.authentication_string', PASSWORD('root')) WHERE User='root';"
  - mysql -e "DELETE FROM mysql.global_priv WHERE User='';"
  - mysql -e "DELETE FROM mysql.global_priv WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
  - mysql -e "DROP DATABASE IF EXISTS test;"
  - mysql -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
  - mysql -e "CREATE DATABASE laravel;"
  - mysql -e 'CREATE USER "laravel"@"localhost" IDENTIFIED BY "secret";'
  - mysql -e 'GRANT ALL PRIVILEGES ON laravel.* TO "laravel"@"localhost" WITH GRANT OPTION;'
  - mysql -e 'CREATE USER "laravel"@"%" IDENTIFIED BY "secret";'
  - mysql -e 'GRANT ALL PRIVILEGES ON laravel.* TO "laravel"@"%" WITH GRANT OPTION;'
  - mysql -e "FLUSH PRIVILEGES;"

  # PHP
  - apt-get install -y php7.4-fpm php7.4-common php7.4-mysql php7.4-xml php7.4-xmlrpc php7.4-curl php7.4-gd php7.4-imagick php7.4-cli php7.4-dev php7.4-imap php7.4-mbstring php7.4-opcache php7.4-redis php7.4-soap php7.4-zip
  - perl -p -i -e 's/upload_max_filesize = .*/upload_max_filesize = 64M/g' /etc/php/7.4/fpm/php.ini
  - perl -p -i -e 's/post_max_size = .*/post_max_size = 64M/g' /etc/php/7.4/fpm/php.ini
  - perl -p -i -e 's/pm.max_children = .*/pm.max_children = 10/g' /etc/php/7.4/fpm/pool.d/www.conf
  - perl -p -i -e 's/pm.start_servers = .*/pm.start_servers = 4/g' /etc/php/7.4/fpm/pool.d/www.conf
  - perl -p -i -e 's/pm.min_spare_servers = .*/pm.min_spare_servers = 2/g' /etc/php/7.4/fpm/pool.d/www.conf
  - perl -p -i -e 's/pm.max_spare_servers = .*/pm.max_spare_servers = 6/g' /etc/php/7.4/fpm/pool.d/www.conf
  - perl -p -i -e 's/pm.max_spare_servers = .*/pm.max_spare_servers = 6/g' /etc/php/7.4/fpm/pool.d/www.conf
  - perl -p -i -e 's/user = .*/user = ubuntu/g' /etc/php/7.4/fpm/pool.d/www.conf
  - perl -p -i -e 's/group = .*/group = ubuntu/g' /etc/php/7.4/fpm/pool.d/www.conf
  - perl -p -i -e 's/listen.owner = .*/listen.owner = ubuntu/g' /etc/php/7.4/fpm/pool.d/www.conf
  - perl -p -i -e 's/listen.group = .*/listen.group = ubuntu/g' /etc/php/7.4/fpm/pool.d/www.conf
  - service php7.4-fpm restart

  # Nginx
  - apt-get install -y nginx
  - rm -rf /etc/nginx
  - git clone https://github.com/gilbitron/laravel-cloud-config.git
  - mv laravel-cloud-config/nginx /etc/nginx
  - rm -rf laravel-cloud-config
  - ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default
  - cp /etc/nginx/sites-available/site-no-ssl.com /etc/nginx/sites-available/laravel.test
  - ln -s /etc/nginx/sites-available/laravel.test /etc/nginx/sites-enabled/laravel.test
  - perl -p -i -e 's/\bsite-no-ssl.com\b/laravel.test/g' /etc/nginx/sites-available/laravel.test
  - perl -p -i -e 's/^user .*/user ubuntu;/g' /etc/nginx/nginx.conf
  - mkdir -p /sites/laravel.test/logs
  - service nginx reload

  # Composer
  - mkdir -p /home/ubuntu/.composer
  - chown -R ubuntu:ubuntu /home/ubuntu/.composer
  - echo "COMPOSER_HOME=/home/ubuntu/.composer" >> /etc/environment
  - curl -sS https://getcomposer.org/installer -o composer-setup.php
  - php composer-setup.php --install-dir=/usr/local/bin --filename=composer
  - rm composer-setup.php

  # Cron
  - (crontab -u ubuntu -l || true; echo "* * * * * php /sites/laravel.test/files/artisan schedule:run >> /dev/null 2>&1") | crontab -u ubuntu -